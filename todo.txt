

fz_sane:
>> [ ] We need more granular ast_token_types in order to store spaces. We can't just say node_include_system because it doesn't store trivia. It would have to be something almost like 1:1 with tokens like [#] [include] [ ] [<] [stdio.h] [>], so 6 nodes instead of one. << 
[ ] Replace ERROR_MESSAGE_AND_EXIT macro for actual Parser_Error
[ ] Lexer is full of stuff that could be done with hash tables
[ ] Tests for lexer

Static Analysis Features:
[ ] DOC(fz): should be in .h file
[ ] TODO(fz): must look like this: Upper case, parentises with user, two dots.
[ ] Inline if statements should have two spaces after next instruction I.e. if (something)  continue;
[ ] Switch statements should have {} per case.
[ ] Use codebase types (I.e. replace all int, unsigned int, double, float)
[ ] Functions in impl. file should be in the same order as header file.
[ ] Header file should not have function implementation
[ ] List functions with declaration but no implementation
[ ] No tabs
[ ] Remove leading spaces
[ ] Functions must be labeled as internal
[ ] Make sure scratch arenas are cleared at the end of the scope

fz_std:
[ ] Macro to reallocate data in arenas